{"version":3,"file":"carousel.min.js","sources":["../src/shared/constants.ts","../src/shared/injectSymbols.ts","../src/shared/slideRegistry.ts","../src/utils/createCloneSlides.ts","../src/utils/disableChildrenTabbing.ts","../src/utils/getNumberInRange.ts","../src/utils/getScaleMultipliers.ts","../src/utils/getSnapAlignOffset.ts","../src/utils/i18nFormatter.ts","../src/utils/mapNumberToRange.ts","../src/utils/throttle.ts","../src/utils/toCssValue.ts","../src/components/ARIA/ARIA.ts","../src/components/Carousel/carouselProps.ts","../src/components/Carousel/Carousel.ts","../src/utils/except.ts","../src/utils/calculateAverage.ts","../src/composables/useHover.ts","../src/composables/useDrag.ts","../src/utils/getDraggedSlidesCount.ts","../src/composables/useWheel.ts","../src/components/Icon/Icon.types.ts","../src/components/Icon/Icon.ts","../src/components/Navigation/Navigation.ts","../src/components/Pagination/Pagination.ts","../src/components/Slide/Slide.ts"],"sourcesContent":["import { CarouselConfig } from './types'\n\nexport const BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'] as const\n\nexport const DIR_MAP = {\n  'bottom-to-top': 'btt',\n  'left-to-right': 'ltr',\n  'right-to-left': 'rtl',\n  'top-to-bottom': 'ttb',\n} as const\n\nexport const DIR_OPTIONS = [\n  'ltr',\n  'left-to-right',\n  'rtl',\n  'right-to-left',\n  'ttb',\n  'top-to-bottom',\n  'btt',\n  'bottom-to-top',\n] as const\n\nexport const I18N_DEFAULT_CONFIG = {\n  ariaGallery: 'Gallery',\n  ariaNavigateToPage: 'Navigate to page {slideNumber}',\n  ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n  ariaNextSlide: 'Navigate to next slide',\n  ariaPreviousSlide: 'Navigate to previous slide',\n  iconArrowDown: 'Arrow pointing downwards',\n  iconArrowLeft: 'Arrow pointing to the left',\n  iconArrowRight: 'Arrow pointing to the right',\n  iconArrowUp: 'Arrow pointing upwards',\n  itemXofY: 'Item {currentSlide} of {slidesCount}',\n} as const\n\nexport const NORMALIZED_DIR_OPTIONS = Object.values(DIR_MAP)\n\nexport const SLIDE_EFFECTS = ['slide', 'fade'] as const\n\nexport const SNAP_ALIGN_OPTIONS = [\n  'center',\n  'start',\n  'end',\n  'center-even',\n  'center-odd',\n] as const\n\nexport const DEFAULT_MOUSE_WHEEL_THRESHOLD = 10\nexport const DEFAULT_DRAG_THRESHOLD = 0.08\n\nexport const DEFAULT_CONFIG: CarouselConfig = {\n  autoplay: 0,\n  breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n  breakpoints: undefined,\n  dir: DIR_OPTIONS[0],\n  enabled: true,\n  gap: 0,\n  height: 'auto',\n  i18n: I18N_DEFAULT_CONFIG,\n  ignoreAnimations: false,\n  itemsToScroll: 1,\n  itemsToShow: 1,\n  modelValue: 0,\n  mouseDrag: true,\n  mouseWheel: false,\n  pauseAutoplayOnHover: false,\n  preventExcessiveDragging: false,\n  slideEffect: SLIDE_EFFECTS[0],\n  snapAlign: SNAP_ALIGN_OPTIONS[0],\n  touchDrag: true,\n  transition: 300,\n  wrapAround: false,\n}\n","import { InjectionKey } from 'vue'\n\nimport { InjectedCarousel } from '@/components/Carousel'\n\n// Use a symbol for inject provide to avoid any kind of collision with another lib\n// https://vuejs.org/guide/components/provide-inject#working-with-symbol-keys\nexport const injectCarousel = Symbol('carousel') as InjectionKey<\n  InjectedCarousel | undefined\n>\n","import { ComponentInternalInstance, EmitFn, shallowReactive } from 'vue'\n\nconst createSlideRegistry = (emit: EmitFn) => {\n  const slides = shallowReactive<Array<ComponentInternalInstance>>([])\n\n  const updateSlideIndexes = (startIndex?: number) => {\n    if (startIndex !== undefined) {\n      slides.slice(startIndex).forEach((slide, offset) => {\n        slide.exposed?.setIndex(startIndex + offset)\n      })\n    } else {\n      slides.forEach((slide, index) => {\n        slide.exposed?.setIndex(index)\n      })\n    }\n  }\n\n  return {\n    cleanup: () => {\n      slides.splice(0, slides.length)\n    },\n\n    getSlides: () => slides,\n\n    registerSlide: (slide: ComponentInternalInstance, index?: number) => {\n      if (!slide) return\n\n      if (slide.props.isClone) {\n        return\n      }\n\n      const slideIndex = index ?? slides.length\n      slides.splice(slideIndex, 0, slide)\n      updateSlideIndexes(slideIndex)\n      emit('slide-registered', { slide, index: slideIndex })\n    },\n\n    unregisterSlide: (slide: ComponentInternalInstance) => {\n      const slideIndex = slides.indexOf(slide)\n      if (slideIndex === -1) return\n\n      emit('slide-unregistered', { slide, index: slideIndex })\n\n      slides.splice(slideIndex, 1)\n      updateSlideIndexes(slideIndex)\n    },\n  }\n}\n\nexport type SlideRegistry = ReturnType<typeof createSlideRegistry>\n\nexport { createSlideRegistry }\n","import { cloneVNode, ComponentInternalInstance, VNode } from 'vue'\n\ntype CreateCloneSlidesArgs = {\n  slides: Array<ComponentInternalInstance>\n  position: 'before' | 'after'\n  toShow: number\n}\n\nexport function createCloneSlides({ slides, position, toShow }: CreateCloneSlidesArgs) {\n  const clones: VNode[] = []\n  const isBefore = position === 'before'\n  const start = isBefore ? -toShow : 0\n  const end = isBefore ? 0 : toShow\n\n  if (slides.length <= 0) {\n    return clones\n  }\n\n  for (let i = start; i < end; i++) {\n    const index = isBefore ? i : i + slides.length\n    const props = {\n      index,\n      isClone: true,\n      id: undefined, // Make sure we don't duplicate the id which would be invalid html\n      key: `clone-${position}-${i}`,\n    }\n    const vnode = slides[((i % slides.length) + slides.length) % slides.length].vnode\n    const clone = cloneVNode(vnode, props)\n    clone.el = null\n    clones.push(clone)\n  }\n\n  return clones\n}\n","import { VNode } from 'vue'\n\nconst FOCUSABLE_ELEMENTS_SELECTOR =\n  'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n/**\n * Disables keyboard tab navigation for all focusable child elements\n * @param node Vue virtual node containing the elements to disable\n */\nexport function disableChildrenTabbing(node: VNode) {\n  if (!node.el || !(node.el instanceof Element)) {\n    return\n  }\n\n  const elements = node.el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)\n\n  for (const el of elements) {\n    if (\n      el instanceof HTMLElement &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-hidden') !== 'true'\n    ) {\n      el.setAttribute('tabindex', '-1')\n    }\n  }\n}\n","type GetNumberInRangeArgs = {\n  val: number\n  max: number\n  min: number\n}\n\nexport function getNumberInRange({ val, max, min }: GetNumberInRangeArgs): number {\n  if (max < min) {\n    return val\n  }\n  return Math.min(Math.max(val, isNaN(min) ? val : min), isNaN(max) ? val : max)\n}\n","export function getTransformValues(el: HTMLElement) {\n  const { transform } = window.getComputedStyle(el)\n\n  //add sanity check\n  return transform\n    .split(/[(,)]/)\n    .slice(1, -1)\n    .map((v) => parseFloat(v))\n}\n\nexport type ScaleMultipliers = {\n  widthMultiplier: number\n  heightMultiplier: number\n}\nexport function getScaleMultipliers(\n  transformElements: Set<HTMLElement>\n): ScaleMultipliers {\n  let widthMultiplier = 1\n  let heightMultiplier = 1\n  transformElements.forEach((el) => {\n    const transformArr = getTransformValues(el)\n\n    if (transformArr.length === 6) {\n      widthMultiplier /= transformArr[0]\n      heightMultiplier /= transformArr[3]\n    }\n  })\n\n  return { widthMultiplier, heightMultiplier }\n}\n","import { SnapAlign } from '@/shared'\n\ntype SnapAlignOffsetParams = {\n  align: SnapAlign\n  slideSize?: number\n  viewportSize?: number\n  itemsToShow?: number\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on items to show.\n * Returns the number of slides to offset.\n *\n * @param align - The alignment type.\n * @param itemsToShow - The number of items to show.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetByItemsToShow(align: SnapAlign, itemsToShow: number): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (itemsToShow - 1) / 2\n    case 'center-even':\n      return (itemsToShow - 2) / 2\n    case 'end':\n      return itemsToShow - 1\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on slide and viewport size.\n * Returns the real width to offset.\n *\n * @param align - The alignment type.\n * @param slideSize - The size of the slide.\n * @param viewportSize - The size of the viewport.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetBySlideAndViewport(\n  align: SnapAlign,\n  slideSize: number,\n  viewportSize: number\n): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (viewportSize - slideSize) / 2\n    case 'center-even':\n      return viewportSize / 2 - slideSize\n    case 'end':\n      return viewportSize - slideSize\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item.\n *\n * @param params - The parameters for calculating the offset.\n * @returns The calculated offset.\n */\nexport function getSnapAlignOffset({\n  slideSize,\n  viewportSize,\n  align,\n  itemsToShow,\n}: SnapAlignOffsetParams): number {\n  if (itemsToShow !== undefined) {\n    return getSnapAlignOffsetByItemsToShow(align, itemsToShow)\n  }\n  if (slideSize !== undefined && viewportSize !== undefined) {\n    return getSnapAlignOffsetBySlideAndViewport(align, slideSize, viewportSize)\n  }\n\n  return 0\n}\n","export function i18nFormatter(string = '', values = {}) {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => acc.replace(`{${key}}`, String(value)),\n    string\n  )\n}\n","type MapNumberToRangeArgs = {\n  val: number\n  max: number\n  min?: number\n}\n\nexport function mapNumberToRange({ val, max, min = 0 }: MapNumberToRangeArgs): number {\n  const mod = max - min + 1\n  return ((((val - min) % mod) + mod) % mod) + min\n}\n","/**\n * Returns a throttled version of the function using requestAnimationFrame.\n *\n * @param fn - The function to throttle.\n * @param ms - The number of milliseconds to wait for the throttled function to be called again\n */\nexport function throttle<Args extends Array<unknown>>(\n  fn: (...args: Args) => void,\n  ms = 0\n): { (...args: Args): void; cancel: () => void } {\n  let isThrottled = false\n  let start = 0\n  let frameId: number | null = null\n\n  function throttled(...args: Args) {\n    if (isThrottled) return\n\n    isThrottled = true\n    const step = () => {\n      frameId = requestAnimationFrame((time) => {\n        const elapsed = time - start\n        if (elapsed > ms) {\n          start = time\n          fn(...args)\n          isThrottled = false\n        } else {\n          step()\n        }\n      })\n    }\n    step()\n  }\n\n  throttled.cancel = () => {\n    if (frameId) {\n      cancelAnimationFrame(frameId)\n      frameId = null\n      isThrottled = false\n    }\n  }\n\n  return throttled\n}\n","/**\n * Converts a value to a CSS-compatible string.\n * @param value - The value to convert.\n * @returns The CSS-compatible string.\n **/\nexport function toCssValue(\n  value?: string | number,\n  unit: string = 'px'\n): string | undefined {\n  if (value === null || value === undefined || value === '') {\n    return undefined\n  }\n\n  if (typeof value === 'number' || parseFloat(value).toString() === value) {\n    return `${value}${unit}`\n  }\n  return value\n}\n","import { defineComponent, h, inject } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { i18nFormatter } from '@/utils'\n\nexport const ARIA = defineComponent({\n  name: 'CarouselAria',\n  setup() {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => ''\n    }\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ['carousel__liveregion', 'carousel__sr-only'],\n          'aria-live': 'polite',\n          'aria-atomic': 'true',\n        },\n        i18nFormatter(carousel.config.i18n['itemXofY'], {\n          currentSlide: carousel.currentSlide + 1,\n          slidesCount: carousel.slidesCount,\n        })\n      )\n  },\n})\n","import { PropType } from 'vue'\n\nimport {\n  BREAKPOINT_MODE_OPTIONS,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  DIR_OPTIONS,\n  SLIDE_EFFECTS,\n  SNAP_ALIGN_OPTIONS,\n} from '@/shared'\n\nimport type {\n  BreakpointMode,\n  CarouselConfig,\n  Dir,\n  DragConfig,\n  NonNormalizedDir,\n  NormalizedDir,\n  SlideEffect,\n  SnapAlign,\n  WheelConfig,\n} from '@/shared'\n\nexport const carouselProps = {\n  // time to auto advance slides in ms\n  autoplay: {\n    default: DEFAULT_CONFIG.autoplay,\n    type: Number,\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: DEFAULT_CONFIG.breakpoints,\n    type: Object as PropType<CarouselConfig['breakpoints']>,\n  },\n  // controls the breakpoint mode relative to the carousel container or the viewport\n  breakpointMode: {\n    default: DEFAULT_CONFIG.breakpointMode,\n    validator(value: BreakpointMode) {\n      return BREAKPOINT_MODE_OPTIONS.includes(value)\n    },\n  },\n  clamp: {\n    type: Boolean,\n  },\n  // control the direction of the carousel\n  dir: {\n    type: String as PropType<Dir>,\n    default: DEFAULT_CONFIG.dir,\n    validator(value: Dir, props: { height?: string }) {\n      // The value must match one of these strings\n      if (!DIR_OPTIONS.includes(value)) {\n        return false\n      }\n\n      const normalizedDir =\n        value in DIR_MAP ? DIR_MAP[value as NonNormalizedDir] : (value as NormalizedDir)\n      if (\n        ['ttb', 'btt'].includes(normalizedDir) &&\n        (!props.height || props.height === 'auto')\n      ) {\n        console.warn(\n          `[vue3-carousel]: The dir \"${value}\" is not supported with height \"auto\".`\n        )\n      }\n      return true\n    },\n  },\n  // enable/disable the carousel component\n  enabled: {\n    default: DEFAULT_CONFIG.enabled,\n    type: Boolean,\n  },\n  // control the gap between slides\n  gap: {\n    default: DEFAULT_CONFIG.gap,\n    type: Number,\n  },\n  // set carousel height\n  height: {\n    default: DEFAULT_CONFIG.height,\n    type: [Number, String],\n  },\n  // aria-labels and additional text labels\n  i18n: {\n    default: DEFAULT_CONFIG.i18n,\n    type: Object as PropType<typeof DEFAULT_CONFIG.i18n>,\n  },\n  ignoreAnimations: {\n    default: false,\n    type: [Array, Boolean, String] as PropType<CarouselConfig['ignoreAnimations']>,\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: DEFAULT_CONFIG.itemsToScroll,\n    type: Number,\n  },\n  // count of items to showed per view\n  itemsToShow: {\n    default: DEFAULT_CONFIG.itemsToShow,\n    type: [Number, String],\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number,\n  },\n  // toggle mouse dragging\n  mouseDrag: {\n    default: DEFAULT_CONFIG.mouseDrag,\n    type: [Boolean, Object] as PropType<boolean | DragConfig>,\n  },\n  // toggle mouse wheel scrolling\n  mouseWheel: {\n    default: DEFAULT_CONFIG.mouseWheel,\n    type: [Boolean, Object] as PropType<boolean | WheelConfig>,\n  },\n  // control mouse scroll threshold\n  mouseScrollThreshold: {\n    default: DEFAULT_CONFIG.mouseScrollThreshold,\n    type: Number,\n  },\n  pauseAutoplayOnHover: {\n    default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n    type: Boolean,\n  },\n  preventExcessiveDragging: {\n    default: false,\n    type: Boolean,\n    validator(value: boolean, props: { wrapAround?: boolean }) {\n      if (value && props.wrapAround) {\n        console.warn(\n          `[vue3-carousel]: \"preventExcessiveDragging\" cannot be used with wrapAround. The setting will be ignored.`\n        )\n      }\n      return true\n    },\n  },\n  slideEffect: {\n    type: String as PropType<SlideEffect>,\n    default: DEFAULT_CONFIG.slideEffect,\n    validator(value: SlideEffect) {\n      return SLIDE_EFFECTS.includes(value)\n    },\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: DEFAULT_CONFIG.snapAlign,\n    validator(value: SnapAlign) {\n      return SNAP_ALIGN_OPTIONS.includes(value)\n    },\n  },\n  // toggle touch dragging\n  touchDrag: {\n    default: DEFAULT_CONFIG.touchDrag,\n    type: [Boolean, Object] as PropType<boolean | DragConfig>,\n  },\n  // sliding transition time in ms\n  transition: {\n    default: DEFAULT_CONFIG.transition,\n    type: Number,\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: DEFAULT_CONFIG.wrapAround,\n    type: Boolean,\n  },\n}\n","import {\n  ComputedRef,\n  Ref,\n  SetupContext,\n  computed,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  shallowReactive,\n  toRefs,\n  watch,\n  watchEffect,\n} from 'vue'\n\nimport { ARIA as ARIAComponent } from '@/components/ARIA'\nimport { DragEventData, useDrag, useHover, useWheel, WheelEventData } from '@/composables'\nimport {\n  CarouselConfig,\n  DEFAULT_CONFIG,\n  DEFAULT_DRAG_THRESHOLD,\n  DIR_MAP,\n  NonNormalizedDir,\n  NormalizedDir,\n  createSlideRegistry,\n  injectCarousel,\n} from '@/shared'\nimport {\n  ScaleMultipliers,\n  calculateAverage,\n  createCloneSlides,\n  except,\n  getDraggedSlidesCount,\n  getNumberInRange,\n  getScaleMultipliers,\n  getSnapAlignOffset,\n  mapNumberToRange,\n  throttle,\n  toCssValue,\n} from '@/utils'\n\nimport {\n  CarouselData,\n  CarouselExposed,\n  CarouselNav,\n  ElRect,\n  InjectedCarousel,\n} from './Carousel.types'\nimport { carouselProps } from './carouselProps'\n\nexport const Carousel = defineComponent({\n  name: 'VueCarousel',\n  props: carouselProps,\n  emits: [\n    'before-init',\n    'drag',\n    'init',\n    'loop',\n    'slide-end',\n    'slide-registered',\n    'slide-start',\n    'slide-unregistered',\n    'update:modelValue',\n    'wheel',\n  ],\n  setup(props: CarouselConfig, { slots, emit, expose }: SetupContext) {\n    const slideRegistry = createSlideRegistry(emit)\n    const slides = slideRegistry.getSlides()\n    const slidesCount = computed(() => slides.length)\n\n    const root: Ref<Element | null> = ref(null)\n    const viewport: Ref<Element | null> = ref(null)\n    const slideSize: Ref<number> = ref(0)\n\n    const fallbackConfig = computed(() => ({\n      ...DEFAULT_CONFIG,\n      // Avoid reactivity tracking in breakpoints and vModel which would trigger unnecessary updates\n      ...except(props, ['breakpoints', 'modelValue']),\n      i18n: { ...DEFAULT_CONFIG.i18n, ...props.i18n },\n    }))\n\n    // current active config\n    const config = shallowReactive<CarouselConfig>({ ...fallbackConfig.value })\n\n    // slides\n    const currentSlideIndex = ref(props.modelValue ?? 0)\n    const activeSlideIndex = ref(currentSlideIndex.value)\n\n    watch(currentSlideIndex, (val) => (activeSlideIndex.value = val))\n    const prevSlideIndex = ref(0)\n    const middleSlideIndex = computed(() => Math.ceil((slidesCount.value - 1) / 2))\n    const maxSlideIndex = computed(() => slidesCount.value - 1)\n    const minSlideIndex = computed(() => 0)\n\n    let autoplayTimer: ReturnType<typeof setInterval> | null = null\n    let transitionTimer: ReturnType<typeof setTimeout> | null = null\n    let resizeObserver: ResizeObserver | null = null\n\n    const effectiveSlideSize = computed(() => slideSize.value + config.gap)\n\n    const normalizedDir = computed<NormalizedDir>(() => {\n      const dir = config.dir || 'ltr'\n      return dir in DIR_MAP ? DIR_MAP[dir as NonNormalizedDir] : (dir as NormalizedDir)\n    })\n\n    const isReversed = computed(() => ['rtl', 'btt'].includes(normalizedDir.value))\n    const isVertical = computed(() => ['ttb', 'btt'].includes(normalizedDir.value))\n    const isAuto = computed(() => config.itemsToShow === 'auto')\n\n    const dimension = computed(() => (isVertical.value ? 'height' : 'width'))\n\n    function updateBreakpointsConfig(): void {\n      if (!mounted.value) {\n        return\n      }\n      // Determine the width source based on the 'breakpointMode' config\n      const widthSource =\n        (fallbackConfig.value.breakpointMode === 'carousel'\n          ? root.value?.getBoundingClientRect().width\n          : typeof window !== 'undefined'\n            ? window.innerWidth\n            : 0) || 0\n\n      const breakpointsArray = Object.keys(props.breakpoints || {})\n        .map((key) => Number(key))\n        .sort((a, b) => +b - +a)\n\n      const newConfig: Partial<CarouselConfig> = {}\n      breakpointsArray.some((breakpoint) => {\n        if (widthSource >= breakpoint) {\n          Object.assign(newConfig, props.breakpoints![breakpoint])\n          if (newConfig.i18n) {\n            Object.assign(\n              newConfig.i18n,\n              fallbackConfig.value.i18n,\n              props.breakpoints![breakpoint].i18n\n            )\n          }\n          return true\n        }\n        return false\n      })\n\n      Object.assign(config, fallbackConfig.value, newConfig)\n\n      // Validate itemsToShow\n      if (!isAuto.value) {\n        config.itemsToShow = getNumberInRange({\n          val: Number(config.itemsToShow),\n          max: props.clamp ? slidesCount.value : Infinity,\n          min: 1,\n        })\n      }\n    }\n\n    const handleResize = throttle(() => {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n    })\n\n    const transformElements = shallowReactive<Set<HTMLElement>>(new Set())\n\n    /**\n     * Setup functions\n     */\n    const slidesRect = ref<Array<ElRect>>([])\n    function updateSlidesRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      slidesRect.value = slides.map((slide) => {\n        const rect = slide.exposed?.getBoundingRect()\n        return {\n          width: rect.width * widthMultiplier,\n          height: rect.height * heightMultiplier,\n        }\n      })\n    }\n    const viewportRect: Ref<ElRect> = ref({\n      width: 0,\n      height: 0,\n    })\n    function updateViewportRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      const rect = viewport.value?.getBoundingClientRect() || { width: 0, height: 0 }\n      viewportRect.value = {\n        width: rect.width * widthMultiplier,\n        height: rect.height * heightMultiplier,\n      }\n    }\n\n    function updateSlideSize(): void {\n      if (!viewport.value) return\n\n      const scaleMultipliers = getScaleMultipliers(transformElements)\n\n      updateViewportRectSize(scaleMultipliers)\n      updateSlidesRectSize(scaleMultipliers)\n\n      if (isAuto.value) {\n        slideSize.value = calculateAverage(\n          slidesRect.value.map((slide) => slide[dimension.value])\n        )\n      } else {\n        const itemsToShow = Number(config.itemsToShow)\n        const totalGap = (itemsToShow - 1) * config.gap\n        slideSize.value = (viewportRect.value[dimension.value] - totalGap) / itemsToShow\n      }\n    }\n\n    function updateSlidesData(): void {\n      if (!config.wrapAround && slidesCount.value > 0) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n    }\n\n    const ignoreAnimations = computed<false | string[]>(() => {\n      if (typeof props.ignoreAnimations === 'string') {\n        return props.ignoreAnimations.split(',')\n      } else if (Array.isArray(props.ignoreAnimations)) {\n        return props.ignoreAnimations\n      } else if (!props.ignoreAnimations) {\n        return []\n      }\n      return false\n    })\n\n    watchEffect(() => updateSlidesData())\n\n    watchEffect(() => {\n      // Call updateSlideSize when viewport is ready and track deps\n      updateSlideSize()\n    })\n\n    let animationInterval: number\n\n    const setAnimationInterval = (event: AnimationEvent) => {\n      const target = event.target as HTMLElement\n      if (\n        !target?.contains(root.value) ||\n        (Array.isArray(ignoreAnimations.value) &&\n          ignoreAnimations.value.includes(event.animationName))\n      ) {\n        return\n      }\n\n      transformElements.add(target)\n      if (!animationInterval) {\n        const stepAnimation = () => {\n          animationInterval = requestAnimationFrame(() => {\n            updateSlideSize()\n            stepAnimation()\n          })\n        }\n        stepAnimation()\n      }\n    }\n    const finishAnimation = (event: AnimationEvent | TransitionEvent) => {\n      const target = event.target as HTMLElement\n      if (target) {\n        transformElements.delete(target)\n      }\n      if (animationInterval && transformElements.size === 0) {\n        cancelAnimationFrame(animationInterval)\n        updateSlideSize()\n      }\n    }\n\n    const mounted = ref(false)\n\n    if (typeof document !== 'undefined') {\n      watchEffect(() => {\n        if (mounted.value && ignoreAnimations.value !== false) {\n          document.addEventListener('animationstart', setAnimationInterval)\n          document.addEventListener('animationend', finishAnimation)\n        } else {\n          document.removeEventListener('animationstart', setAnimationInterval)\n          document.removeEventListener('animationend', finishAnimation)\n        }\n      })\n    }\n\n    onMounted((): void => {\n      mounted.value = true\n      updateBreakpointsConfig()\n      initAutoplay()\n\n      if (root.value) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(root.value)\n      }\n\n      emit('init')\n    })\n\n    onBeforeUnmount(() => {\n      mounted.value = false\n\n      slideRegistry.cleanup()\n\n      if (transitionTimer) {\n        clearTimeout(transitionTimer)\n      }\n      if (animationInterval) {\n        cancelAnimationFrame(animationInterval)\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n      }\n\n      if (typeof document !== 'undefined') {\n        handleBlur()\n      }\n      if (root.value) {\n        root.value.removeEventListener('transitionend', updateSlideSize)\n        root.value.removeEventListener('animationiteration', updateSlideSize)\n      }\n    })\n\n    /**\n     * Carousel Event listeners\n     */\n    const { isHover, handleMouseEnter, handleMouseLeave } = useHover()\n\n    const handleArrowKeys = throttle((event: KeyboardEvent): void => {\n      if (event.ctrlKey) return\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (isVertical.value === event.key.endsWith('Up')) {\n            if (isReversed.value) {\n              next(true)\n            } else {\n              prev(true)\n            }\n          }\n          break\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (isVertical.value === event.key.endsWith('Down')) {\n            if (isReversed.value) {\n              prev(true)\n            } else {\n              next(true)\n            }\n          }\n          break\n      }\n    }, 200)\n\n    const handleBlur = (): void => {\n      document.removeEventListener('keydown', handleArrowKeys)\n    }\n\n    const handleFocus = (): void => {\n      document.addEventListener('keydown', handleArrowKeys)\n    }\n\n    /**\n     * Autoplay\n     */\n    function initAutoplay(): void {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return\n        }\n\n        next()\n      }, config.autoplay)\n    }\n\n    function resetAutoplay(): void {\n      stopAutoplay()\n      initAutoplay()\n    }\n\n    function stopAutoplay(): void {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n        autoplayTimer = null\n      }\n    }\n\n    /**\n     * Navigation function\n     */\n    const isSliding = ref(false)\n\n    const onDrag = ({ deltaX, deltaY, isTouch }: DragEventData) => {\n      emit('drag', { deltaX, deltaY })\n\n      const threshold = isTouch\n        ? typeof config.touchDrag === 'object'\n          ? (config.touchDrag?.threshold ?? DEFAULT_DRAG_THRESHOLD)\n          : DEFAULT_DRAG_THRESHOLD\n        : typeof config.mouseDrag === 'object'\n          ? (config.mouseDrag?.threshold ?? DEFAULT_DRAG_THRESHOLD)\n          : DEFAULT_DRAG_THRESHOLD\n\n      const draggedSlides = getDraggedSlidesCount({\n        isVertical: isVertical.value,\n        isReversed: isReversed.value,\n        dragged: { x: deltaX, y: deltaY },\n        effectiveSlideSize: effectiveSlideSize.value,\n        threshold,\n      })\n\n      // Prevent unnecessary reactivity\n      if (draggedSlides === 0) {\n        return\n      }\n\n      activeSlideIndex.value = config.wrapAround\n        ? currentSlideIndex.value + draggedSlides\n        : getNumberInRange({\n            val: currentSlideIndex.value + draggedSlides,\n            max: maxSlideIndex.value,\n            min: minSlideIndex.value,\n          })\n    }\n\n    const onDragEnd = () => slideTo(activeSlideIndex.value)\n\n    const { dragged, isDragging, handleDragStart } = useDrag({\n      isSliding,\n      onDrag,\n      onDragEnd,\n    })\n\n    const onWheel = ({ deltaX, deltaY, isScrollingForward }: WheelEventData) => {\n      emit('wheel', { deltaX, deltaY })\n\n      if (isScrollingForward) {\n        // Scrolling down/right\n        if (isReversed.value) {\n          prev()\n        } else {\n          next()\n        }\n      } else {\n        // Scrolling up/left\n        if (isReversed.value) {\n          next()\n        } else {\n          prev()\n        }\n      }\n    }\n\n    const { handleScroll } = useWheel({\n      isVertical,\n      isSliding,\n      config,\n      onWheel,\n    })\n\n    function next(skipTransition = false): void {\n      slideTo(currentSlideIndex.value + config.itemsToScroll, skipTransition)\n    }\n\n    function prev(skipTransition = false): void {\n      slideTo(currentSlideIndex.value - config.itemsToScroll, skipTransition)\n    }\n\n    function slideTo(slideIndex: number, skipTransition = false): void {\n      if (!skipTransition && isSliding.value) {\n        return\n      }\n      \n      const targetIndex = (config.wrapAround ? mapNumberToRange : getNumberInRange)({\n        val: slideIndex,\n        max: maxSlideIndex.value,\n        min: minSlideIndex.value,\n      })\n      \n      if (currentSlideIndex.value === targetIndex) {\n        return;\n      }\n      \n      prevSlideIndex.value = currentSlideIndex.value\n\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n\n      stopAutoplay()\n      isSliding.value = true\n\n      currentSlideIndex.value = slideIndex\n      if (targetIndex !== slideIndex) {\n        modelWatcher.pause()\n      }\n      emit('update:modelValue', targetIndex)\n\n      const transitionCallback = (): void => {\n        if (config.wrapAround && targetIndex !== slideIndex) {\n          modelWatcher.resume()\n\n          currentSlideIndex.value = targetIndex\n          emit('loop', {\n            currentSlideIndex: currentSlideIndex.value,\n            slidingToIndex: slideIndex,\n          })\n        }\n\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value,\n        })\n\n        isSliding.value = false\n        resetAutoplay()\n      }\n\n      transitionTimer = setTimeout(transitionCallback, config.transition)\n    }\n\n    function restartCarousel(): void {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n      resetAutoplay()\n    }\n\n    // Update the carousel on props change\n    watch(\n      () => [fallbackConfig.value, props.breakpoints],\n      () => updateBreakpointsConfig(),\n      { deep: true }\n    )\n\n    watch(\n      () => props.autoplay,\n      () => resetAutoplay()\n    )\n\n    // Handle changing v-model value\n    const modelWatcher = watch(\n      () => props.modelValue,\n      (val) => {\n        if (val === currentSlideIndex.value) {\n          return\n        }\n        slideTo(Number(val), true)\n      }\n    )\n\n    // Init carousel\n    emit('before-init')\n\n    const clonedSlidesCount = computed(() => {\n      if (!config.wrapAround) {\n        return { before: 0, after: 0 }\n      }\n      if (isAuto.value) {\n        return { before: slides.length, after: slides.length }\n      }\n\n      const itemsToShow = Number(config.itemsToShow)\n      const slidesToClone = Math.ceil(itemsToShow + (config.itemsToScroll - 1))\n      const before = slidesToClone - activeSlideIndex.value\n      const after = slidesToClone - (slidesCount.value - (activeSlideIndex.value + 1))\n\n      return {\n        before: Math.max(0, before),\n        after: Math.max(0, after),\n      }\n    })\n\n    const clonedSlidesOffset = computed(() => {\n      if (!clonedSlidesCount.value.before) {\n        return 0\n      }\n      if (isAuto.value) {\n        return (\n          slidesRect.value\n            .slice(-1 * clonedSlidesCount.value.before)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        )\n      }\n\n      return clonedSlidesCount.value.before * effectiveSlideSize.value * -1\n    })\n\n    const snapAlignOffset = computed(() => {\n      if (isAuto.value) {\n        const slideIndex =\n          ((currentSlideIndex.value % slides.length) + slides.length) % slides.length\n        return getSnapAlignOffset({\n          slideSize: slidesRect.value[slideIndex]?.[dimension.value],\n          viewportSize: viewportRect.value[dimension.value],\n          align: config.snapAlign,\n        })\n      }\n\n      return getSnapAlignOffset({\n        align: config.snapAlign,\n        itemsToShow: +config.itemsToShow,\n      })\n    })\n    const scrolledOffset = computed(() => {\n      let output = 0\n\n      if (isAuto.value) {\n        if (currentSlideIndex.value < 0) {\n          output =\n            slidesRect.value\n              .slice(currentSlideIndex.value)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        } else {\n          output = slidesRect.value\n            .slice(0, currentSlideIndex.value)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0)\n        }\n        output -= snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          const maxSlidingValue =\n            slidesRect.value.reduce(\n              (acc, slide) => acc + slide[dimension.value] + config.gap,\n              0\n            ) -\n            viewportRect.value[dimension.value] -\n            config.gap\n\n          output = getNumberInRange({\n            val: output,\n            max: maxSlidingValue,\n            min: 0,\n          })\n        }\n      } else {\n        let scrolledSlides = currentSlideIndex.value - snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          scrolledSlides = getNumberInRange({\n            val: scrolledSlides,\n            max: slidesCount.value - +config.itemsToShow,\n            min: 0,\n          })\n        }\n        output = scrolledSlides * effectiveSlideSize.value\n      }\n\n      return output * (isReversed.value ? 1 : -1)\n    })\n\n    const visibleRange = computed(() => {\n      if (!isAuto.value) {\n        const base = currentSlideIndex.value - snapAlignOffset.value\n        if (config.wrapAround) {\n          return {\n            min: Math.floor(base),\n            max: Math.ceil(base + Number(config.itemsToShow) - 1),\n          }\n        }\n        return {\n          min: Math.floor(\n            getNumberInRange({\n              val: base,\n              max: slidesCount.value - Number(config.itemsToShow),\n              min: 0,\n            })\n          ),\n          max: Math.ceil(\n            getNumberInRange({\n              val: base + Number(config.itemsToShow) - 1,\n              max: slidesCount.value - 1,\n              min: 0,\n            })\n          ),\n        }\n      }\n\n      // Auto width mode\n      let minIndex = 0\n      {\n        let accumulatedSize = 0\n        let index = 0 - clonedSlidesCount.value.before\n        const offset = Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n\n        while (accumulatedSize <= offset) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        minIndex = index - 1\n      }\n\n      let maxIndex = 0\n      {\n        let index = minIndex\n        let accumulatedSize = 0\n        if (index < 0) {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n        } else {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value)\n        }\n\n        while (accumulatedSize < viewportRect.value[dimension.value]) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        maxIndex = index - 1\n      }\n\n      return {\n        min: Math.floor(minIndex),\n        max: Math.ceil(maxIndex),\n      }\n    })\n\n    const trackTransform: ComputedRef<string | undefined> = computed(() => {\n      if (config.slideEffect === 'fade') {\n        return undefined\n      }\n\n      const translateAxis = isVertical.value ? 'Y' : 'X'\n\n      // Include user drag interaction offset\n      const dragOffset = isVertical.value ? dragged.y : dragged.x\n\n      let totalOffset = scrolledOffset.value + dragOffset\n\n      if (!config.wrapAround && config.preventExcessiveDragging) {\n        let maxSlidingValue = 0\n        if (isAuto.value) {\n          maxSlidingValue = slidesRect.value.reduce(\n            (acc, slide) => acc + slide[dimension.value],\n            0\n          )\n        } else {\n          maxSlidingValue =\n            (slidesCount.value - Number(config.itemsToShow)) * effectiveSlideSize.value\n        }\n        const min = isReversed.value ? 0 : -1 * maxSlidingValue\n        const max = isReversed.value ? maxSlidingValue : 0\n        totalOffset = getNumberInRange({\n          val: totalOffset,\n          min,\n          max,\n        })\n      }\n      return `translate${translateAxis}(${totalOffset}px)`\n    })\n\n    const carouselStyle = computed(() => ({\n      '--vc-carousel-height': toCssValue(config.height),\n      '--vc-cloned-offset': toCssValue(clonedSlidesOffset.value),\n      '--vc-slide-gap': toCssValue(config.gap),\n      '--vc-transition-duration': isSliding.value\n        ? toCssValue(config.transition, 'ms')\n        : undefined,\n    }))\n\n    const nav: CarouselNav = { slideTo, next, prev }\n\n    const provided: InjectedCarousel = reactive({\n      activeSlide: activeSlideIndex,\n      config,\n      currentSlide: currentSlideIndex,\n      isSliding,\n      isVertical,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      nav,\n      normalizedDir,\n      slideRegistry,\n      slideSize,\n      slides,\n      slidesCount,\n      viewport,\n      visibleRange,\n    })\n\n    provide(injectCarousel, provided)\n\n    const data = reactive<CarouselData>({\n      config,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      middleSlide: middleSlideIndex,\n      minSlide: minSlideIndex,\n      slideSize,\n      slidesCount,\n    })\n\n    expose<CarouselExposed>(\n      reactive({\n        data,\n        next,\n        prev,\n        restartCarousel,\n        slideTo,\n        updateBreakpointsConfig,\n        updateSlideSize,\n        updateSlidesData,\n        ...toRefs(provided),\n      })\n    )\n\n    return () => {\n      const slotSlides = slots.default || slots.slides\n      const outputSlides = slotSlides?.(data) || []\n\n      const { before, after } = clonedSlidesCount.value\n      const slidesBefore = createCloneSlides({\n        slides,\n        position: 'before',\n        toShow: before,\n      })\n\n      const slidesAfter = createCloneSlides({\n        slides,\n        position: 'after',\n        toShow: after,\n      })\n\n      const output = [...slidesBefore, ...outputSlides, ...slidesAfter]\n\n      if (!config.enabled || !output.length) {\n        return h(\n          'section',\n          {\n            ref: root,\n            class: ['carousel', 'is-disabled'],\n          },\n          output\n        )\n      }\n\n      const addonsElements = slots.addons?.(data) || []\n\n      const trackEl = h(\n        'ol',\n        {\n          class: 'carousel__track',\n          onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n          onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n          onWheel: config.mouseWheel ? handleScroll : null,\n          style: { transform: trackTransform.value },\n        },\n        output\n      )\n      const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl)\n\n      return h(\n        'section',\n        {\n          ref: root,\n          class: [\n            'carousel',\n            `is-${normalizedDir.value}`,\n            `is-effect-${config.slideEffect}`,\n            {\n              'is-dragging': isDragging.value,\n              'is-hover': isHover.value,\n              'is-sliding': isSliding.value,\n              'is-vertical': isVertical.value,\n            },\n          ],\n          dir: normalizedDir.value,\n          style: carouselStyle.value,\n          'aria-label': config.i18n['ariaGallery'],\n          tabindex: '0',\n          onBlur: handleBlur,\n          onFocus: handleFocus,\n          onMouseenter: handleMouseEnter,\n          onMouseleave: handleMouseLeave,\n        },\n        [viewPortEl, addonsElements, h(ARIAComponent)]\n      )\n    }\n  },\n})\n","\n/** Useful function to destructure props without triggering reactivity for certain keys */\nexport function except<Obj extends object, Keys extends string>(obj: Obj, keys: Keys[]): Omit<Obj, Keys> {\n  return (Object.keys(obj).filter((k) => !(keys as string[]).includes(k)) as Array<Exclude<keyof Obj, Keys>>)\n    .reduce((acc, key) => (acc[key] = obj[key], acc), {} as Omit<Obj, Keys>)\n}","export function calculateAverage(numbers: number[]) {\n  if (numbers.length === 0) return 0\n  const sum = numbers.reduce((acc, num) => acc + num, 0)\n  return sum / numbers.length\n}\n","import { ref } from 'vue'\n\nexport function useHover() {\n  const isHover = ref(false)\n\n  const handleMouseEnter = (): void => {\n    isHover.value = true\n  }\n\n  const handleMouseLeave = (): void => {\n    isHover.value = false\n  }\n\n  return {\n    isHover,\n    handleMouseEnter,\n    handleMouseLeave,\n  }\n}\n","import { ref, reactive, computed, Ref } from 'vue'\n\nimport { throttle } from '@/utils'\n\nexport type DragEventData = {\n  deltaX: number\n  deltaY: number\n  isTouch: boolean\n}\nexport interface UseDragOptions {\n  isSliding: boolean | Ref<boolean>\n  onDrag?: ({ deltaX, deltaY, isTouch }: DragEventData) => void\n  onDragStart?: () => void\n  onDragEnd?: () => void\n}\n\nexport function useDrag(options: UseDragOptions) {\n  let isTouch = false\n  const startPosition = { x: 0, y: 0 }\n  const dragged = reactive({ x: 0, y: 0 })\n  const isDragging = ref(false)\n\n  const { isSliding } = options\n\n  const sliding = computed(() => {\n    return typeof isSliding === 'boolean' ? isSliding : isSliding.value\n  })\n\n  const handleDragStart = (event: MouseEvent | TouchEvent): void => {\n    // Prevent drag initiation on input elements or if already sliding\n    const targetTagName = (event.target as HTMLElement).tagName\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || sliding.value) {\n      return\n    }\n\n    isTouch = event.type === 'touchstart'\n\n    if (isTouch && (event as TouchEvent).touches.length > 1) {\n      // If there is more than 1 finger on the screen, avoid drag start (this allows user to pinch zoom)\n      return\n    } else if (!isTouch) {\n      event.preventDefault()\n      if ((event as MouseEvent).button !== 0) {\n        return\n      }\n    }\n\n    startPosition.x = isTouch\n      ? (event as TouchEvent).touches[0].clientX\n      : (event as MouseEvent).clientX\n    startPosition.y = isTouch\n      ? (event as TouchEvent).touches[0].clientY\n      : (event as MouseEvent).clientY\n\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n    const endEvent = isTouch ? 'touchend' : 'mouseup'\n    document.addEventListener(moveEvent, handleDrag, { passive: false })\n    document.addEventListener(endEvent, handleDragEnd, { passive: true })\n\n    options.onDragStart?.()\n  }\n\n  const handleDrag = throttle((event: TouchEvent | MouseEvent): void => {\n    if (isTouch && (event as TouchEvent).touches.length > 1) {\n      return\n    }\n\n    isDragging.value = true\n\n    const currentX = isTouch\n      ? (event as TouchEvent).touches[0].clientX\n      : (event as MouseEvent).clientX\n    const currentY = isTouch\n      ? (event as TouchEvent).touches[0].clientY\n      : (event as MouseEvent).clientY\n\n    dragged.x = currentX - startPosition.x\n    dragged.y = currentY - startPosition.y\n\n    options.onDrag?.({ deltaX: dragged.x, deltaY: dragged.y, isTouch })\n  })\n\n  const handleDragEnd = (): void => {\n    handleDrag.cancel()\n\n    const draggedDistance = Math.abs(dragged.x) + Math.abs(dragged.y);\n\n    if (!isTouch && draggedDistance > 10) {\n      window.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault()\n        e.stopPropagation()\n      }, { once: true, capture: true })\n    }\n\n    options.onDragEnd?.()\n\n    dragged.x = 0\n    dragged.y = 0\n    isDragging.value = false\n\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n    const endEvent = isTouch ? 'touchend' : 'mouseup'\n    document.removeEventListener(moveEvent, handleDrag)\n    document.removeEventListener(endEvent, handleDragEnd)\n  }\n\n  return {\n    dragged,\n    isDragging,\n    handleDragStart,\n  }\n}\n","type DragParams = {\n  isVertical: boolean\n  isReversed: boolean\n  dragged: { x: number; y: number }\n  effectiveSlideSize: number\n  threshold: number\n}\n\n/**\n * Calculates the number of slides to move based on drag movement\n * @param params Configuration parameters for drag calculation\n * @returns Number of slides to move (positive or negative)\n */\nexport function getDraggedSlidesCount(params: DragParams): number {\n  const { isVertical, isReversed, dragged, effectiveSlideSize, threshold } = params\n\n  // Get drag value based on direction\n  const dragValue = isVertical ? dragged.y : dragged.x\n\n  // If no drag, return +0 explicitly\n  if (dragValue === 0) return 0\n\n  const dragRatio = dragValue / effectiveSlideSize\n  const absRatio = Math.abs(dragRatio)\n\n  // If below the threshold, consider it no movement\n  if (absRatio < threshold) return 0\n  \n  // For drags less than a full slide, move one slide in the drag direction\n  // For drags of a full slide or more, move the corresponding number of slides\n  const slidesDragged = absRatio < 1 ? Math.sign(dragRatio) : Math.round(dragRatio)\n\n  return isReversed ? slidesDragged : -slidesDragged\n}\n","import { ComputedRef, Ref, computed } from 'vue'\n\nimport { CarouselConfig } from '@/shared'\nimport { DEFAULT_MOUSE_WHEEL_THRESHOLD } from '@/shared/constants'\n\nexport type WheelEventData = {\n  deltaX: number\n  deltaY: number\n  isScrollingForward: boolean\n}\n\nexport type UseWheelOptions = {\n  isVertical: boolean | ComputedRef<boolean>\n  isSliding: boolean | Ref<boolean>\n  config: CarouselConfig\n  onWheel?: (data: WheelEventData) => void\n}\n\nexport function useWheel(options: UseWheelOptions) {\n  const { isVertical, isSliding, config } = options\n\n  // Create computed values to handle both reactive and non-reactive inputs\n  const vertical = computed(() => {\n    return typeof isVertical === 'boolean' ? isVertical : isVertical.value\n  })\n\n  const sliding = computed(() => {\n    return typeof isSliding === 'boolean' ? isSliding : isSliding.value\n  })\n\n  const handleScroll = (event: WheelEvent): void => {\n    event.preventDefault()\n\n    if (!config.mouseWheel || sliding.value) {\n      return\n    }\n\n    // Add sensitivity threshold to prevent small movements from triggering navigation\n    const threshold =\n      typeof config.mouseWheel === 'object'\n        ? (config.mouseWheel.threshold ?? DEFAULT_MOUSE_WHEEL_THRESHOLD)\n        : DEFAULT_MOUSE_WHEEL_THRESHOLD\n\n    // Determine scroll direction\n    const deltaY = Math.abs(event.deltaY) > threshold ? event.deltaY : 0\n    const deltaX = Math.abs(event.deltaX) > threshold ? event.deltaX : 0\n\n    // If neither delta exceeds the threshold, don't navigate\n    if (deltaY === 0 && deltaX === 0) {\n      return\n    }\n\n    // Determine primary delta based on carousel orientation\n    const primaryDelta = vertical.value ? deltaY : deltaX\n\n    // If primaryDelta is 0, use the other delta as fallback\n    const effectiveDelta =\n      primaryDelta !== 0 ? primaryDelta : vertical.value ? deltaX : deltaY\n\n    // Positive delta means scrolling down/right\n    const isScrollingForward = effectiveDelta > 0\n\n    options.onWheel?.({ deltaX, deltaY, isScrollingForward })\n  }\n\n  return {\n    handleScroll,\n  }\n}\n","export enum IconName {\n  arrowDown = 'arrowDown',\n  arrowLeft = 'arrowLeft',\n  arrowRight = 'arrowRight',\n  arrowUp = 'arrowUp',\n}\n\nexport type IconNameValue = `${IconName}`\n\nexport type IconProps = {\n  name: IconNameValue\n  title?: string\n}\n","import { defineComponent, h, inject, PropType } from 'vue'\n\nimport { DEFAULT_CONFIG, injectCarousel } from '@/shared'\n\nimport { IconName, IconNameValue, IconProps } from './Icon.types'\n\nconst iconI18n = <Name extends IconNameValue>(name: Name) =>\n  `icon${name.charAt(0).toUpperCase() + name.slice(1)}` as `icon${Capitalize<Name>}`\n\nexport const icons = {\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n}\n\nfunction isIconName(candidate: string): candidate is IconName {\n  return candidate in IconName\n}\n\nconst validateIconName = (value: IconNameValue) => {\n  return value && isIconName(value)\n}\n\nexport const Icon = defineComponent<IconProps>({\n  props: {\n    name: {\n      type: String as PropType<IconNameValue>,\n      required: true,\n      validator: validateIconName,\n    },\n    title: {\n      type: String,\n      default: (props: { name: IconNameValue }) =>\n        props.name ? DEFAULT_CONFIG.i18n[iconI18n(props.name)] : '',\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel, null)\n\n    return () => {\n      const iconName = props.name\n      if (!iconName || !validateIconName(iconName)) return\n\n      const path = icons[iconName]\n      const pathEl = h('path', { d: path })\n\n      const iconTitle: string = carousel?.config.i18n[iconI18n(iconName)] || props.title!\n\n      const titleEl = h('title', iconTitle)\n\n      return h(\n        'svg',\n        {\n          class: 'carousel__icon',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-label': iconTitle,\n        },\n        [titleEl, pathEl]\n      )\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, PropType } from 'vue'\n\nimport { injectCarousel, NormalizedDir } from '@/shared'\n\nimport { Icon, IconNameValue } from '../Icon'\n\nimport { NavigationProps } from './Navigation.types'\n\nexport const Navigation = defineComponent<NavigationProps>({\n  name: 'CarouselNavigation',\n  inheritAttrs: false,\n  props: {\n    carousel: {\n      type: Object as PropType<NavigationProps['carousel']>,\n    },\n  },\n  setup(props, { slots, attrs }) {\n    let carousel = inject(injectCarousel, null)!\n    const { next: slotNext, prev: slotPrev } = slots\n\n    const getPrevIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowDown',\n        ltr: 'arrowLeft',\n        rtl: 'arrowRight',\n        ttb: 'arrowUp',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n    const getNextIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowUp',\n        ltr: 'arrowRight',\n        rtl: 'arrowLeft',\n        ttb: 'arrowDown',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n\n    const prevDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide <= carousel.minSlide\n    )\n    const nextDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide >= carousel.maxSlide\n    )\n\n    return () => {\n      if (props.carousel) {\n        carousel = props.carousel;\n      }\n      if (!carousel) {\n        console.warn('[vue3-carousel]: A carousel component must be provided for the navigation component to display')\n        return '';\n      }\n      const { i18n } = carousel.config\n      const prevButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: prevDisabled.value,\n          'aria-label': i18n['ariaPreviousSlide'],\n          title: i18n['ariaPreviousSlide'],\n          onClick: carousel.nav.prev,\n          ...attrs,\n          class: [\n            'carousel__prev',\n            { 'carousel__prev--disabled': prevDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotPrev?.() || h(Icon, { name: getPrevIcon() })\n      )\n      const nextButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: nextDisabled.value,\n          'aria-label': i18n['ariaNextSlide'],\n          title: i18n['ariaNextSlide'],\n          onClick: carousel.nav.next,\n          ...attrs,\n          class: [\n            'carousel__next',\n            { 'carousel__next--disabled': nextDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotNext?.() || h(Icon, { name: getNextIcon() })\n      )\n\n      return [prevButton, nextButton]\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, PropType, VNode } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { getSnapAlignOffset, i18nFormatter, mapNumberToRange } from '@/utils'\n\nimport { PaginationProps } from './Pagination.types'\n\nexport const Pagination = defineComponent<PaginationProps>({\n  name: 'CarouselPagination',\n  props: {\n    disableOnClick: {\n      type: Boolean,\n    },\n    paginateByItemsToShow: {\n      type: Boolean,\n    },\n    carousel: {\n      type: Object as PropType<PaginationProps['carousel']>,\n    }\n  },\n  setup(props) {\n    let carousel = inject(injectCarousel, null)!\n\n    const itemsToShow = computed(() => carousel.config.itemsToShow as number)\n    const offset = computed(() =>\n      getSnapAlignOffset({\n        align: carousel.config.snapAlign,\n        itemsToShow: itemsToShow.value,\n      })\n    )\n    const isPaginated = computed(\n      () => props.paginateByItemsToShow && itemsToShow.value > 1\n    )\n    const currentPage = computed(() =>\n      Math.ceil((carousel.activeSlide - offset.value) / itemsToShow.value)\n    )\n    const pageCount = computed(() => Math.ceil(carousel.slidesCount / itemsToShow.value))\n\n    const isActive = (slide: number): boolean =>\n      mapNumberToRange(\n        isPaginated.value\n          ? {\n              val: currentPage.value,\n              max: pageCount.value - 1,\n              min: 0,\n            }\n          : {\n              val: carousel.activeSlide,\n              max: carousel.maxSlide,\n              min: carousel.minSlide,\n            }\n      ) === slide\n\n    return () => {\n      if (props.carousel) {\n        carousel = props.carousel;\n      }\n      if (!carousel) {\n        console.warn('[vue3-carousel]: A carousel component must be provided for the pagination component to display')\n        return '';\n      }\n      const children: Array<VNode> = []\n\n      for (\n        let slide = isPaginated.value ? 0 : carousel.minSlide;\n        slide <= (isPaginated.value ? pageCount.value - 1 : carousel.maxSlide);\n        slide++\n      ) {\n        const buttonLabel = i18nFormatter(\n          carousel.config.i18n[\n            isPaginated.value ? 'ariaNavigateToPage' : 'ariaNavigateToSlide'\n          ],\n          {\n            slideNumber: slide + 1,\n          }\n        )\n        const active = isActive(slide)\n        const button = h('button', {\n          type: 'button',\n          class: {\n            'carousel__pagination-button': true,\n            'carousel__pagination-button--active': active,\n          },\n          'aria-label': buttonLabel,\n          'aria-pressed': active,\n          'aria-controls': carousel.slides[slide]?.exposed?.id,\n          title: buttonLabel,\n          disabled: props.disableOnClick,\n          onClick: () =>\n            carousel.nav.slideTo(\n              isPaginated.value\n                ? Math.floor(slide * +carousel.config.itemsToShow + offset.value)\n                : slide\n            ),\n        })\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button)\n        children.push(item)\n      }\n\n      return h('ol', { class: 'carousel__pagination' }, children)\n    }\n  },\n})\n","import {\n  ComputedRef,\n  computed,\n  defineComponent,\n  DeepReadonly,\n  getCurrentInstance,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  SetupContext,\n  useId,\n} from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { disableChildrenTabbing } from '@/utils'\n\nimport { SlideProps } from './Slide.types'\n\nexport const Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    id: {\n      type: String,\n      default: (props: { isClone?: boolean }) => (props.isClone ? undefined : useId()),\n    },\n    index: {\n      type: Number,\n      default: undefined,\n    },\n    isClone: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props: DeepReadonly<SlideProps>, { attrs, slots, expose }: SetupContext) {\n    const carousel = inject(injectCarousel)\n    provide(injectCarousel, undefined) // Don't provide for nested slides\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const currentIndex = ref(props.index)\n\n    const setIndex = (newIndex: number) => {\n      currentIndex.value = newIndex\n    }\n\n    const instance = getCurrentInstance()!\n\n    const getBoundingRect = () => {\n      const el = instance.vnode.el as HTMLElement\n      return el ? el.getBoundingClientRect() : { width: 0, height: 0 }\n    }\n\n    expose({\n      id: props.id,\n      setIndex,\n      getBoundingRect,\n    })\n\n    const isActive: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide\n    )\n    const isPrev: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide - 1\n    )\n    const isNext: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide + 1\n    )\n    const isVisible: ComputedRef<boolean> = computed(\n      () =>\n        currentIndex.value >= carousel.visibleRange.min &&\n        currentIndex.value <= carousel.visibleRange.max\n    )\n\n    const slideStyle = computed(() => {\n      if (carousel.config.itemsToShow === 'auto') {\n        return\n      }\n      const itemsToShow = carousel.config.itemsToShow\n      const dimension =\n        carousel.config.gap > 0 && itemsToShow > 1\n          ? `calc(${100 / itemsToShow}% - ${\n              (carousel.config.gap * (itemsToShow - 1)) / itemsToShow\n            }px)`\n          : `${100 / itemsToShow}%`\n\n      return carousel.isVertical ? { height: dimension } : { width: dimension }\n    })\n\n    carousel.slideRegistry.registerSlide(instance, props.index)\n    onUnmounted(() => {\n      carousel.slideRegistry.unregisterSlide(instance)\n    })\n\n    if (props.isClone) {\n      // Prevent cloned slides from being focusable\n      onMounted(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n      onUpdated(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n    }\n\n    return () => {\n      if (!carousel.config.enabled) {\n        return slots.default?.()\n      }\n\n      return h(\n        'li',\n        {\n          style: [attrs.style, { ...slideStyle.value }],\n          class: {\n            carousel__slide: true,\n            'carousel__slide--clone': props.isClone,\n            'carousel__slide--visible': isVisible.value,\n            'carousel__slide--active': isActive.value,\n            'carousel__slide--prev': isPrev.value,\n            'carousel__slide--next': isNext.value,\n            'carousel__slide--sliding': carousel.isSliding,\n          },\n          onFocusin: () => {\n            // Prevent the viewport being scrolled by the focus\n            if (carousel.viewport) {\n              carousel.viewport.scrollLeft = 0\n            }\n            carousel.nav.slideTo(currentIndex.value)\n          },\n          id: props.isClone ? undefined : props.id,\n          'aria-hidden': props.isClone || undefined,\n        },\n        slots.default?.({\n          currentIndex: currentIndex.value,\n          isActive: isActive.value,\n          isClone: props.isClone,\n          isPrev: isPrev.value,\n          isNext: isNext.value,\n          isSliding: carousel.isSliding,\n          isVisible: isVisible.value,\n        })\n      )\n    }\n  },\n})\n"],"names":["BREAKPOINT_MODE_OPTIONS","DIR_MAP","DIR_OPTIONS","I18N_DEFAULT_CONFIG","ariaGallery","ariaNavigateToPage","ariaNavigateToSlide","ariaNextSlide","ariaPreviousSlide","iconArrowDown","iconArrowLeft","iconArrowRight","iconArrowUp","itemXofY","NORMALIZED_DIR_OPTIONS","Object","values","SLIDE_EFFECTS","SNAP_ALIGN_OPTIONS","DEFAULT_DRAG_THRESHOLD","DEFAULT_CONFIG","autoplay","breakpointMode","breakpoints","undefined","dir","enabled","gap","height","i18n","ignoreAnimations","itemsToScroll","itemsToShow","modelValue","mouseDrag","mouseWheel","pauseAutoplayOnHover","preventExcessiveDragging","slideEffect","snapAlign","touchDrag","transition","wrapAround","injectCarousel","Symbol","createSlideRegistry","emit","slides","shallowReactive","updateSlideIndexes","startIndex","slice","forEach","slide","offset","_a","exposed","setIndex","index","cleanup","splice","length","getSlides","registerSlide","props","isClone","slideIndex","unregisterSlide","indexOf","createCloneSlides","position","toShow","clones","isBefore","start","end","i","id","key","vnode","clone","cloneVNode","el","push","disableChildrenTabbing","node","Element","elements","querySelectorAll","HTMLElement","hasAttribute","getAttribute","setAttribute","getNumberInRange","val","max","min","Math","isNaN","getScaleMultipliers","transformElements","widthMultiplier","heightMultiplier","transformArr","transform","window","getComputedStyle","split","map","v","parseFloat","getTransformValues","getSnapAlignOffset","slideSize","viewportSize","align","getSnapAlignOffsetByItemsToShow","getSnapAlignOffsetBySlideAndViewport","i18nFormatter","string","entries","reduce","acc","value","replace","String","mapNumberToRange","mod","throttle","fn","ms","isThrottled","frameId","throttled","args","step","requestAnimationFrame","time","cancel","cancelAnimationFrame","toCssValue","unit","toString","ARIA","defineComponent","name","setup","carousel","inject","h","class","config","currentSlide","slidesCount","carouselProps","default","type","Number","validator","includes","clamp","Boolean","console","warn","Array","mouseScrollThreshold","Carousel","emits","slots","expose","slideRegistry","computed","root","ref","viewport","fallbackConfig","assign","obj","keys","filter","k","currentSlideIndex","activeSlideIndex","watch","prevSlideIndex","middleSlideIndex","ceil","maxSlideIndex","minSlideIndex","autoplayTimer","transitionTimer","resizeObserver","effectiveSlideSize","normalizedDir","isReversed","isVertical","isAuto","dimension","updateBreakpointsConfig","mounted","widthSource","getBoundingClientRect","width","innerWidth","breakpointsArray","sort","a","b","newConfig","some","breakpoint","Infinity","handleResize","updateSlidesData","updateSlideSize","Set","slidesRect","viewportRect","scaleMultipliers","rect","updateViewportRectSize","getBoundingRect","updateSlidesRectSize","numbers","num","totalGap","isArray","animationInterval","watchEffect","setAnimationInterval","event","target","contains","animationName","add","stepAnimation","finishAnimation","delete","size","document","addEventListener","removeEventListener","onMounted","initAutoplay","ResizeObserver","observe","onBeforeUnmount","clearTimeout","clearInterval","disconnect","handleBlur","isHover","handleMouseEnter","handleMouseLeave","useHover","handleArrowKeys","ctrlKey","endsWith","next","prev","handleFocus","setInterval","resetAutoplay","stopAutoplay","isSliding","dragged","isDragging","handleDragStart","options","isTouch","startPosition","x","y","reactive","sliding","handleDrag","touches","currentX","clientX","currentY","clientY","onDrag","call","deltaX","deltaY","handleDragEnd","draggedDistance","abs","e","preventDefault","stopPropagation","once","capture","onDragEnd","moveEvent","endEvent","targetTagName","tagName","button","passive","onDragStart","useDrag","threshold","_b","_d","_c","draggedSlides","params","dragValue","dragRatio","absRatio","slidesDragged","sign","round","getDraggedSlidesCount","slideTo","handleScroll","vertical","primaryDelta","isScrollingForward","onWheel","useWheel","skipTransition","targetIndex","slidingToIndex","modelWatcher","pause","setTimeout","resume","deep","clonedSlidesCount","before","after","slidesToClone","clonedSlidesOffset","snapAlignOffset","scrolledOffset","output","scrolledSlides","visibleRange","base","floor","minIndex","accumulatedSize","normalizedIndex","maxIndex","trackTransform","translateAxis","dragOffset","totalOffset","maxSlidingValue","carouselStyle","nav","provided","activeSlide","maxSlide","minSlide","provide","data","middleSlide","restartCarousel","toRefs","slotSlides","outputSlides","addonsElements","addons","trackEl","onMousedownCapture","onTouchstartPassiveCapture","style","viewPortEl","tabindex","onBlur","onFocus","onMouseenter","onMouseleave","ARIAComponent","IconName","iconI18n","charAt","toUpperCase","icons","arrowDown","arrowLeft","arrowRight","arrowUp","validateIconName","Icon","required","title","iconName","path","pathEl","d","iconTitle","titleEl","viewBox","role","Navigation","inheritAttrs","attrs","slotNext","slotPrev","prevDisabled","nextDisabled","disabled","onClick","btt","ltr","rtl","ttb","Pagination","disableOnClick","paginateByItemsToShow","isPaginated","currentPage","pageCount","isActive","children","buttonLabel","slideNumber","active","item","Slide","useId","currentIndex","instance","getCurrentInstance","newIndex","isPrev","isNext","isVisible","slideStyle","onUnmounted","onUpdated","carousel__slide","onFocusin","scrollLeft"],"mappings":"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"}